import mongoose from 'mongoose';

const ObjectId = mongoose.Schema.ObjectId;

const fileSchema = new mongoose.Schema({
    name: { type: String, required: true },
    filesize: { type: Number, required: true, index: true },
    md5: { type: String, default: '' },
}, { _id: false });

const thumbnailSchema = fileSchema.clone().add({
    width: { type: Number, required: true },
    height: { type: Number, required: true },
});

const subtitleSchema = fileSchema.clone().add({
    language: { type: String, required: true },
    isAutomatic: { type: Boolean, default: false },
});

const chapterSchema = new mongoose.Schema({
    start_time: { type: Number, required: true },
    end_time: { type: Number, required: true },
    title: { type: String, default: null },
}, { _id: false });

const commentSchema = new mongoose.Schema({
    author: { type: String, default: null },
    author_id: { type: String, default: null },
    id: { type: String, default: null },
    html: { type: String, default: null },
    text: { type: String, default: null },
    timestamp: { type: Number, default: null },
    parent: { type: String, default: null },
    like_count: { type: Number, default: null },
    is_favorited: { type: Boolean, default: false },
    author_thumbnail: {type: String, default: null},
    author_is_uploader: { type: Boolean, default: false },
}, { _id: false });

const videoSchema = new mongoose.Schema({
    extractor: { type: String, required: true },
    extractorKey: { type: String, default: null },
    id: { type: String, required: true },
    title: { type: String, required: true },
    format: { type: String, default: null },
    formatId: { type: String, default: null },
    formatNote: { type: String, default: null },
    width: { type: Number, default: null },
    height: { type: Number, default: null },
    resolution: { type: String, default: null },
    tbr: { type: Number, default: null },
    abr: { type: Number, default: null },
    acodec: { type: String, default: null },
    asr: { type: Number, default: null },
    vbr: { type: Number, default: null },
    fps: { type: Number, default: null },
    vcodec: { type: String, default: null },
    url: { type: String, default: null },
    ext: { type: String, default: null },
    playerUrl: { type: String, default: null },
    altTitle: { type: String, default: null },
    displayId: { type: String, default: null },
    description: { type: String, default: null },
    uploader: { type: String, default: null },
    license: { type: String, default: null },
    creator: { type: String, default: null },
    uploadDate: { type: Date, default: null, index: true },
    uploaderId: { type: String, default: null },
    uploaderUrl: { type: String, default: null },
    channel: { type: String, default: null },
    channelId: { type: String, default: null },
    channelUrl: { type: String, default: null },
    location: { type: String, default: null },
    duration: { type: Number, default: null, index: true },
    viewCount: { type: Number, default: null, index: true },
    likeCount: { type: Number, default: null, index: true },
    dislikeCount: { type: Number, default: null, index: true },
    repostCount: { type: Number, default: null },
    averageRating: { type: Number, default: null },
    commentCount: { type: Number, default: null },
    comments: [{ type: commentSchema }], // Unused now that comments are stored on the filesystem
    downloadedCommentCount: { type: Number, default: null },
    ageLimit: { type: Number, default: null },
    webpageUrl: { type: String, default: null },
    categories: [{ type: String }],
    tags: [{ type: String }],
    isLive: { type: Boolean, default: null },
    startTime: { type: Number, default: null },
    endTime: { type: Number, default: null },
    chapters: [{ type: chapterSchema }],
    chapter: { type: String, default: null },
    chapterNumber: { type: Number, default: null },
    chapterId: { type: String, default: null },
    series: { type: String, default: null },
    season: { type: String, default: null },
    seasonNumber: { type: Number, default: null },
    seasonId: { type: String, default: null },
    episode: { type: String, default: null },
    episodeNumber: { type: Number, default: null },
    episodeId: { type: String, default: null },
    track: { type: String, default: null },
    trackNumber: { type: Number, default: null },
    trackId: { type: String, default: null },
    artist: { type: String, default: null },
    genre: { type: String, default: null },
    album: { type: String, default: null },
    albumType: { type: String, default: null },
    albumArtist: { type: String, default: null },
    discNumber: { type: Number, default: null },
    releaseYear: { type: Number, default: null },
    playlist: { type: String, default: null },
    playlistIndex: { type: Number, default: null },
    playlistId: { type: String, default: null },
    playlistTitle: { type: String, default: null },
    playlistUploader: { type: String, default: null },
    playlistUploaderId: { type: String, default: null },
    playlistUploaderUrl: { type: String, default: null },
    playlistDescription: { type: String, default: null },
    hashtags: [{ type: String }],
    likeDislikeRatio: { type: Number, default: null, index: true },
    directory: { type: String, required: true },
    totalFilesize: { type: Number, required: true },
    totalOriginalFilesize: { type: Number, required: true },
    videoFile: { type: fileSchema, required: true },
    infoFile: { type: fileSchema, required: true },
    descriptionFile: { type: fileSchema, default: null },
    annotationsFile: { type: fileSchema, default: null },
    thumbnailFiles: [{ type: fileSchema }],
    mediumResizedThumbnailFile: { type: thumbnailSchema, default: null },
    smallResizedThumbnailFile: { type: thumbnailSchema, default: null },
    subtitleFiles: [{ type: subtitleSchema }],
    unindexedFiles: [{ type: String }],
    isShort: {type: Boolean, default: false },
    dateDownloaded: { type: Date, default: new Date(), index: true },
    formatCode: { type: String, default: null },
    isAudioOnly: { type: Boolean, default: null },
    urls: { type: String, default: null },
    arguments: { type: String, default: null },
    overrideUploader: { type: String, default: null },
    originalUploader: { type: String, default: null },
    uploaderDocument: { type: ObjectId, ref: 'Uploader', default: null },
    playlistDocument: { type: ObjectId, ref: 'Playlist', default: null },
    jobDocument: { type: ObjectId, ref: 'Job', required: true },
    youtubeDlVersion: { type: String, default: null },
    youtubeDlPath: { type: String, default: null },
    imported: { type: Boolean, default: false },
    scriptVersion: { type: String, required: true },
}, {
    timestamps: true,
});

videoSchema.index({ extractor: 1, id: 1 }, { unique: true });
videoSchema.index({
    extractorKey: 'text',
    title: 'text',
    altTitle: 'text',
    description: 'text',
    uploader: 'text',
    creator: 'text',
    channel: 'text',
    location: 'text',
    categories: 'text',
    tags: 'text',
    'chapters.title': 'text',
    chapter: 'text',
    series: 'text',
    season: 'text',
    episode: 'text',
    track: 'text',
    artist: 'text',
    genre: 'text',
    album: 'text',
    albumArtist: 'text',
    albumType: 'text',
    playlist: 'text',
    playlistTitle: 'text',
    hashtags: 'text',
}, {
    weights: {
        extractorKey: 3,
        title: 5,
        altTitle: 4,
        description: 1,
        uploader: 3,
        creator: 3,
        channel: 3,
        location: 5,
        categories: 5,
        tags: 5,
        'chapters.title': 1,
        chapter: 1,
        series: 5,
        season: 3,
        episode: 5,
        track: 5,
        artist: 5,
        genre: 5,
        album: 5,
        albumArtist: 3,
        albumType: 5,
        playlist: 3,
        playlistTitle: 3,
        hashtags: 5,
    },
    name: 'TextIndex',
});

export default mongoose.model('Video', videoSchema);
